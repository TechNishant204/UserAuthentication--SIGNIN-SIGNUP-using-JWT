{
	"info": {
		"_postman_id": "2b848505-1224-40f1-9c6e-01e883239499",
		"name": "UserAuthentication-using JWT & BCRYPT",
		"description": "This implementation provides a Node.js application for user authentication and authorization using Bearer tokens. It follows the MVC pattern, uses MongoDB with Mongoose for data storage, and includes JWT for secure authentication. The code is modular, with separate files for major functions, and includes API documentation via Postman.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21245283"
	},
	"item": [
		{
			"name": "CreateAccount-POST",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"testuser\",\r\n  \"email\": \"test@example.com\",\r\n  \"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/api/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"api",
						"auth",
						"register"
					]
				},
				"description": "**Description**: Register a new user  \n**Request**:  \n**Method**: POST  \n**URL** : {{baseURL}}/api/auth/register\n\n**Error Responses**:\n\n- 400: { \"message\": \"All fields are required\" }\n    \n- 400: { \"message\": \"User already exists\" }\n    \n- 500: { \"message\": \"Server error\" }"
			},
			"response": []
		},
		{
			"name": "LoginUser -POST",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n    \"email\":\"meenalmumbaikar@yahoo.com\",\r\n    \"password\":\"$2b$10$8AMVWWT14NjgRP33kUPMvOH2VbBjhdp0TdblKWyCovAanA/aXJrZe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "**Description** : Login a user and recieve a JWT  \n**Request** :  \n**Method**: POST  \n**URL** : {{baseURL}}/api/auth/login"
			},
			"response": []
		},
		{
			"name": "FetchUserByToken- GET",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZGM1ZGYzMTBlN2RkOWJkZGQ5ZmMzZSIsInVzZXJuYW1lIjoidGVzdHVzZXIiLCJlbWFpbCI6InRlc3RAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDI0OTc0MTEsImV4cCI6MTc0MjUwMTAxMX0.ciAwh93Mcy-SFxAxnMgsbNMrWLWD6ogVMZeXrr_if-I",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3ZGM1ZTM1MTBlN2RkOWJkZGQ5ZmM0MSIsInVzZXJuYW1lIjoiTWVlbmFDdXBpZCIsImVtYWlsIjoibWVlbmFsbXVtYmFpa2FyQHlhaG9vLmNvbSIsImlhdCI6MTc0MjQ5NjA4NywiZXhwIjoxNzQyNDk5Njg3fQ.A8qRGbHvWO64rXfp5M_lbGPtWLY90OD0_JbR4pFr87c",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/api/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"api",
						"user"
					]
				},
				"description": "**Description**: Get user information (protected route).  \n**Request**:  \n**Method** : GET\n\n- **URL**: {{baseUrl}}/api/user\n    \n- **Headers**: Authorization: Bearer {{token}}  \n    \n\nBody(JSON):  \n{  \n\"user\": {  \n\"id\": \"user_id\",  \n\"username\": \"testuser\",  \n\"email\": \"test@example.com\"  \n}  \n}"
			},
			"response": []
		}
	]
}